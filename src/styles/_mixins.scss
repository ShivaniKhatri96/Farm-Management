@import "./variables";

//white box
@mixin box {
  background-color: $white-color;
  border-radius: 0.6rem;
  box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px,
    rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;
  @content;
}
//mixin for table
@mixin gridTableRow($number) {
  display: grid;
  grid-template-columns: min-content repeat($number, 1fr);
  padding: 1rem 0;
  :not(:first-child) {
    margin: auto;
  }
  color: $body-green;
}
//for mobile to desktop
// for example: $sm (600px) will be included, it's 600px and
@mixin min-xs {
  @media (min-width: $sx) {
    @content;
  }
}
@mixin min-sm {
  @media (min-width: $sm) {
    @content;
  }
}

@mixin min-md {
  @media (min-width: $md) {
    @content;
  }
}
@mixin min-lg {
  @media (min-width: $lg) {
    @content;
  }
}
@mixin min-xl {
  @media (min-width: $xl) {
    @content;
  }
}

//for desktop to mobile
// for example: $sm (600px) won't be included, it's below 600px

@mixin max-xl {
  @media (max-width: $xl) {
    @content;
  }
}
@mixin max-lg {
  @media (max-width: $lg) {
    @content;
  }
}
@mixin max-md {
  @media (max-width: $md) {
    @content;
  }
}
@mixin max-sm {
  @media (max-width: $sm) {
    @content;
  }
}
@mixin max-xs {
  @media (max-width: $sx) {
    @content;
  }
}
// for this screen with landscape
@mixin min-sm-Landscape {
  @media only screen and (min-width: $sm) and (orientation: landscape) {
    @content;
  }
}
// for this screen with portrait
@mixin min-md-portrait {
  @media only screen and (min-width: $md) and (orientation: portrait) {
    @content;
  }
}
